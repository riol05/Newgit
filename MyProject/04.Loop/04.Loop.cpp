// 04.Loop.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

#include <iostream>
using namespace std;


// while : 될떄까지 계속 반복에 적합               
//for : 몇회 반복에 적합
//do while : 반드시 한번은 하고 반복에 적합

int main()
{
    int n = 0;
    /****************************************************************
     * 반복문 (Iteration)
     *
     * 블록을 반복적으로 실행하는 문장
     ****************************************************************/

     /****************************************************************
      * while 반복문
      *
      * 조건식의 true, false에 따라 블록을 반복하는 반복문
      ****************************************************************/

    n = 0;
    while (n < 5)
    {
        cout << "while 반복문 반복횟수 : " << n << endl;
        n++;
    }

    /*
    * int player = 100;
    * int monsterattack = 10;
    *
    * bool gameover = false;
    * while(!gameover)
    * {
    * cout << "몬스터가 플레이어를 공격합니다.\n";
    player -= monsterattack;
    cout << "플레이어의 체력이" << player << "이 되었습니다.\n"

    if(player <= 0)
    {
    cout << "플레이어가 죽었습니다.\n";
    cout << "게임오버\n";
    gameover = true
    }
    }
    식으로 while 반복문을 쓸수있다.
    *
    */
    /****************************************************************
     * do while 반복문
     *
     * 블록을 한번 실행 후 조건식의 true, false에 따라 블록을 반복하는 반복문
     ****************************************************************/

    n = 0;
    do
    {
        cout << "do while 반복문 반복횟수 : " << n << endl;
        n++;
    } while (n < 5);   // do while 반복문에선 while 뒤에 ; 을 넣어준다. // 조건이 안맞아도 한번은 수행한다.


    /****************************************************************
     * for 반복문
     *
     * 초기화, 조건식, 증감연산 으로 구성된 반복문
     ****************************************************************/

    for (int i = 0; i < 5; i++) //여기에 세가지 작업이 들어간다. 초기화 ,조건식, 증감연산
    {
        cout << "for 반복문 반복횟수 : " << i << endl;
    }

    for (int left = 2; left <= 9; left++)
    {
        cout << left << " 단!" << endl;

        for (int right = 1; right <= 9; right++)
        {

            cout << left << " * " << right << " = " << left * right << endl;
        }
    }


    /****************************************************************
    * 제어문
    *
    * 프로그램의 순차적인 실행 중 다른 문으로 제어를 전송
    ****************************************************************/

    /****************************************************************
     * break 제어문
     *
     * 가장 가까운 바깥쪽 반복문 또는 switch 조건문을 종료
     ****************************************************************/

    int num = 35;
    for (int i = 2; i < num; i++)
    {
        if (num % i == 0)
        {
            cout << num << "을 나눌 수 있는 가장 작은 수는 " << i << "입니다." << endl;
            break;
        }
    }

    int inventoryCount = 20;
    for (int i = 0; i < inventoryCount; i++)
    {
        cout << i << "번째 인벤토리에서 포션을 찾습니다." << endl;
        if (i == 6)
        {
            cout << "포션을 찾았습니다.\n";
            cout << "포션을 마십니다.\n";
            break;

        }
    }

    /****************************************************************
     * continue 제어문
     *
     * 가장 가까운 반복문의 새 반복을 시작 (반복문의 처음으로 간다.)
     ****************************************************************/

    for (int i = 0; i < 10; i++)
    {
        if (i % 2 == 0)
            continue; // 컨티뉴를 계속 만나며 돌아가게된다.

        cout << i << "은 홀수입니다." << endl;
    }


}